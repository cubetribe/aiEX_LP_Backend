# GoAIX Environment Configuration
# Kopiere diese Datei zu .env und fülle die Werte aus

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Node Environment (development, staging, production)
NODE_ENV=development

# Application Keys für Strapi (generiere mit: openssl rand -base64 32)
APP_KEYS=generateRandomKey1,generateRandomKey2,generateRandomKey3,generateRandomKey4

# JWT Secret für Authentication (generiere mit: openssl rand -base64 32)
JWT_SECRET=generateRandomJWTSecret

# API Token Salt (generiere mit: openssl rand -base64 32)
API_TOKEN_SALT=generateRandomAPITokenSalt

# Admin JWT Secret (generiere mit: openssl rand -base64 32)
ADMIN_JWT_SECRET=generateRandomAdminJWTSecret

# Transfer Token Salt (generiere mit: openssl rand -base64 32)
TRANSFER_TOKEN_SALT=generateRandomTransferTokenSalt

# Server Configuration
HOST=0.0.0.0
PORT=1337

# Public URL für Production (quiz.goaiex.com deployment)
STRAPI_URL=https://api.quiz.goaiex.com

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Settings
DATABASE_CLIENT=postgres
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=goaix_dev
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=your_postgres_password

# Database SSL (set to true for production)
DATABASE_SSL=false

# Connection Pool Settings
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis für Caching und Queue-Management
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis für Bull Queue (kann separate Instanz sein)
QUEUE_REDIS_HOST=localhost
QUEUE_REDIS_PORT=6379
QUEUE_REDIS_PASSWORD=
QUEUE_REDIS_DB=1

# =============================================================================
# AI PROVIDERS CONFIGURATION
# =============================================================================

# OpenAI Configuration
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_DEFAULT_MODEL=gpt-4o
OPENAI_ORGANIZATION=your-openai-org-id

# Claude Configuration (Anthropic)
ANTHROPIC_API_KEY=your-claude-api-key-here
CLAUDE_DEFAULT_MODEL=claude-3-5-sonnet-20241022

# Google Gemini Configuration
GOOGLE_AI_API_KEY=your-gemini-api-key-here
GEMINI_DEFAULT_MODEL=gemini-1.5-flash

# AI Processing Configuration
AI_ENABLE_FALLBACK=true
AI_ENABLE_CACHING=true
AI_CACHE_TIMEOUT=3600000
AI_MAX_RETRIES=3
AI_COST_OPTIMIZATION=false
AI_LOAD_BALANCING=false

# AI Processing Service Configuration
AI_PROCESSING_MAX_RETRIES=3
AI_PROCESSING_TIMEOUT=60000
AI_ENABLE_PARALLEL=false
AI_CACHE_RESULTS=true
AI_VALIDATE_OUTPUTS=true

# =============================================================================
# GOOGLE SERVICES CONFIGURATION
# =============================================================================

# Google Service Account für Sheets API
# Pfad zur Service Account JSON-Datei
GOOGLE_SERVICE_ACCOUNT_PATH=./config/google-service-account.json

# Alternativ: Service Account Credentials als JSON-String
# GOOGLE_SERVICE_ACCOUNT_JSON={"type":"service_account",...}

# Default Google Sheets Template ID (optional)
DEFAULT_GOOGLE_SHEET_TEMPLATE_ID=your-template-sheet-id

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# SMTP Settings für E-Mail-Versand
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-email-password

# E-Mail-Templates
EMAIL_FROM_NAME=GoAIX Quiz Platform
EMAIL_FROM_ADDRESS=noreply@quiz.goaiex.com

# =============================================================================
# QUEUE CONFIGURATION
# =============================================================================

# Bull Queue Settings
QUEUE_CONCURRENCY=5
QUEUE_MAX_ATTEMPTS=3
QUEUE_BACKOFF_DELAY=5000

# Queue Dashboard (Bull Board) - nur für Development
QUEUE_DASHBOARD_ENABLED=true
QUEUE_DASHBOARD_PORT=3001

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level (error, warn, info, verbose, debug, silly)
LOG_LEVEL=info

# Log File Paths
LOG_FILE_ERROR=logs/error.log
LOG_FILE_COMBINED=logs/combined.log

# Console Logging (true/false)
LOG_CONSOLE=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS Origins (comma-separated) - quiz.goaiex.com configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,https://quiz.goaiex.com,https://www.quiz.goaiex.com,https://admin.quiz.goaiex.com

# Rate Limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=60000

# Session Configuration
SESSION_SECRET=generateRandomSessionSecret

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================

# Sentry für Error-Tracking (optional)
SENTRY_DSN=https://your-sentry-dsn-here

# Google Analytics (optional)
GOOGLE_ANALYTICS_ID=GA-XXXXXXXX-X

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Debug-Modus für Development
DEBUG=strapi:*

# Webpack Dev Server (falls verwendet)
WEBPACK_DEV_SERVER=false

# Hot Reload für Development
HOT_RELOAD=true

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# SSL/TLS Settings für Production
SSL_ENABLED=false
SSL_KEY_PATH=./ssl/private.key
SSL_CERT_PATH=./ssl/certificate.crt

# CDN Settings für Static Assets
CDN_URL=https://cdn.quiz.goaiex.com

# Health Check Settings
HEALTH_CHECK_ENABLED=true

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Experimentelle Features
FEATURE_ADVANCED_ANALYTICS=false
FEATURE_WEBHOOK_INTEGRATION=false
FEATURE_MULTI_LANGUAGE=false

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================

# Slack Webhook für Notifications (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxx/xxx/xxx

# Zapier Webhook (optional)
ZAPIER_WEBHOOK_URL=https://hooks.zapier.com/hooks/catch/xxx/xxx

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================

# Automatische Backups
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# Maintenance Mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=Die Plattform wird derzeit gewartet. Bitte versuchen Sie es später erneut.

# =============================================================================
# NOTES
# =============================================================================

# 1. Generiere sichere Secrets mit: openssl rand -base64 32
# 2. Verwende für Production starke Passwörter und Secrets
# 3. Speichere Credentials sicher (z.B. AWS Secrets Manager)
# 4. Setze NODE_ENV=production für Production-Deployments
# 5. Aktiviere SSL/TLS für Production
# 6. Konfiguriere Monitoring und Logging für Production